tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
mtcars
with(mtcars, tapply(hp, cyl, mean))
s<-with(mtcars, tapply(hp,cyl,mean))
s
s[8]-s[4]
s[8]
s[[8]]
s["8"]
s["8"]-s["4"]
debug(ls)
ls
?ls
?ls
ls(mtcars)
ls()
ls()
ls
f<-gl(40,10)
f
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
y
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- z-1
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?:
?":"
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times =40)
rep(c(0,1,2))
rep(c(0,1,2),times=10)
rep(c(0,1,2),each =10)
num_vect <- vector(0.5,55,-10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "bobby")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
pastet(1:3, c("X","Y","Z"), sep = "")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4,sep = "-")
c(44,NA,5,NA)
x<- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
x[!is.na(x)] -> y
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x(c(-2,-10))
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20, 4,5)
matrix(1:20, nrow=4, ncol = 5)
matrix(data = 1:20, nrow=4, ncol = 5)
library(swirl)
swirl()
my_matrix2<-matrix(dat = 1:20, nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<- c("patient","age","weight","bp","rating","test")
colnames(cnames,my_data)
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
TRUE == TRUE
(FALSE ==TRUE) == TRUE
(FALSE ==TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
library(swirl)
swirl()
View(my_mean)
install.packages(xlsx)
install.packages("xlsxjars")
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(rJava)
library(xlsx)
library(xlsxjars)
library(xlsx)
install.packages("rJava",type='source')
install.packages("rJava", type = "source")
install.packages(ggplot2)
install.packages("ggplot2")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
siwrl
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks,100)
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwdd=2)
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution, region=="east")
head(east)
hist(east$pm25,col="grean")
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,,col="green")
with(pollution,plot(latitude~pm25))
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<-subset(pollution,region="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region,data=state,layout=c(4,1))
xyplot(Life.Exp~Income|region,data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy,data=mpg)
head(airquality)
rnage(airquality$Ozone)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozone in NYC")
may<-subset(airquality,month=="May")
may<-subset(airquality,month==5)
head(airquality)
may <- subset(airquality, Month==5)
points(may$Wind,may$Ozone,col="blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
may <- subset(airquality, Month!=5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="blue",pch=16)
points(notmay$Wind,notmay$Ozone,col="blue",pch=8)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",,pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,title="Ozone and Wind")
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
parpar(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
install.packages("kernlab")
setwd("~/Dropbox/MOOC/Coursera/Reproducible Research")
install.packages("knitr")
install.packages("markdown")
install.packages("slidify")
install.packages("xtable")
setwd("~/Dropbox/MOOC/Coursera/Reproducible Research/RepData_PeerAssessment1")
rm(list=ls())
mainDir <- getwd()
dir.create(file.path(mainDir, "data"), showWarnings = FALSE)
zipfile <- "./activity.zip"
unzip (zipfile, exdir = "./data")
unzip(zipfile, exdir = "./data")
list.files(path = "./data")[2]
list.files(path = "./data")
list.files(path = "./data")[1]
datafile <- paste("./data/",list.files(path = "./data")[1],sep="")
read.csv(datafile)
activitydata <- read.csv(datafile)
head(activitydata)
summary(activitydata)
head(activitydata)
as.Date(activitydata$date[1])
activitydata$date <- as.Date(activitydata$date)
months(activitydata$date[1])
class(activitydata$date)
class(activitydata$steps)
class(activitydata$interval)
activity_by_day <- activitydata[,1:2]
head(activity_by_day)
?tapply
unique(days(activitydata$date))
?months
unique(activitydata$date)
unique(activitydata$date$day)
activitydata$date[1]
activitydata$date[1]$day
activitydata$date[1].day
activitydata$date[1]%d
library(chron)
unique(days(activitydata$date))
?tapply
library(plyr)
activity_by_day <- ddply(activity_by_day,c("date"),colwize(mean))
activity_by_day <- ddply(activity_by_day,c("date"),colwise(mean))
activity_by_day
library(dplyr)
library(chron)
library(dplyr)
library(plyr)
activity_by_day <- select(activitydata, c(steps, date)
activity_by_day <- select(activitydata, c(steps, date))
activity_by_day <- complete.cases(activity_by_day)
activity_by_day <- select(activitydata, c(steps, date))
activity_by_day <- filter(activity_by_day, !is.na(steps))
activity_by_day <- ddply(activity_by_day,c("date"),colwise(mean))
activity_by_day
activity_by_day <- filter(select(activitydata, c(steps, date)), !is.na(steps))
activity_by_day <- ddply(activity_by_day,c("date"),colwise(sum))
activity_by_day
steps_per_day <- filter(select(activitydata, c(steps, date)), !is.na(steps))
steps_per_day <- ddply(steps_by_day,c("date"),colwise(sum))
steps_per_day <- ddply(steps_per_day,c("date"),colwise(sum))
hist(steps_per_day)
?hist
hist(steps_per_day$date,steps_per_day$steps)
library(ggplot2)
mean(steps_per_day$steps)
median(steps_per_day$steps)
steps_per_day <- filter(select(activitydata, c(date, steps)), !is.na(steps))
steps_per_day <- ddply(steps_per_day,c("date"),colwise(sum))
hist(steps_per_day)
hist(steps_per_day$steps)
qplot(steps_per_day)
qplot(steps,data=steps_per_day)
qplot(steps,data=steps_per_day,bins=date)
g <- ggplot(steps_per_day,aes(date,steps))
g+geom_histogram()
g <- ggplot(steps_per_day,aes(x=date,y=steps))
g+geom_histogram()
g+geom_bar()
g+geom_bar() + stat_bin(breaks = steps_per_day$date)
barplot(steps_per_day$steps)
?barplot
barplot(steps_per_day$steps,steps_per_day$date)
g<- ggplot(aes(x=date,y=steps),data=steps_per_day)
g+ geom_bar()
steps_per_day
class(steps_per_day$steps)
g+ geom_bar(stat="identity",position="dodge")
g+ geom_bar(stat="identity")
?geom_bar
g+ geom_bar(stat="identity") + labs(x = "Date", y = "Total Steps", title = "Total Steps per Day") + theme_bw()
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
head(steps_per_interval)
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
head(steps_per_interval)
g2 <- ggplot(aes(x = interval, y = steps), data = steps_per_interval)
g2 + geom_contour()
g2 + geom_line()
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
?geom_line
summary(steps_per_interval)
max(steps_per_interval$steps)
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
activitydata[is.na(activitydata$steps),]
length(activitydata[is.na(activitydata$steps),])
dim(activitydata[is.na(activitydata$steps),])
dim(is.na(activitydata$steps))
length(is.na(activitydata$steps))
sum(is.na(activitydata$steps))
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
imputed_activitydata <- activitydata
na_subs <- is.na(imputed_activitydata$steps)
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
steps_per_interval
17568/288
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
na_subs
test=0
for (i %in% na_subs) { test <- test+ 1}
for (i in na_subs) { test <- test+ 1}
for (na_subs) { test <- test+ 1}
test <-0
na_subs <- which(is.na(imputed_activitydata$steps))
length(na_subs)
for (i %in% na_subs) { test +1}
for (i in na_subs) { test +1}
for (i in na_subs) { test <-test +1}
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
summary(imputed_activitydata)
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
summary(imputed_activitydata)
summary(activitydata)
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
imputed_activitydata[na_subs,]
activitydata[na_subs,]
imputed_activitydata[na_subs,]
unique(activitydata$date)
activitydata[activitydata$date=="2012-11-15"]
activitydata[activitydata$date=="2012-11-15",]
activitydata[activitydata$date=="2012-11-14",]
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
weekdays(activitydata$date)
weekend <- c("Saturday","Sunday")
?mutate
names(activitydata)
activitydata <- mutate(activitydata, week = weekdays(date))
head(activitydata)
?factor
activitydata$week <- activitydata$week %in% weekend
?factor
head(activitydata)
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
head(activitydata)
summary(activitydata)
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
g4 <- ggplot(aes(x = interval, y = steps, color=week), data = steps_per_interval_day)
g4 + geom_line() +
labs(x = "Interval", y = "Average Steps", title = "Average Steps per Interval") +
theme_bw()
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Completed Classes/Johns Hopkins - Data Science Specialization/04_Exploratory Data Analysis/project2/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Reproducible Research/PA1_rcode.R')
source('~/Dropbox/MOOC/Coursera/Reproducible Research/RepData_PeerAssessment1/PA1_Rcode.R')
source('~/Dropbox/MOOC/Coursera/Reproducible Research/RepData_PeerAssessment1/PA1_Rcode.R')
