class(cls_list)
as.character(cls_list)
cls_vect <-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lappy(flag_colors,sum
)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(3,4,5,5,5,6,6)
uniquec((3,4,5,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replacement = TRUE,prob = c(0.3,0.7))
flips<-sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100, prob = 0.7)
flips2<-rbinom(100,size = 1, prob = 0.7)
flips2
sum(flips2)
?rnomr
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
my_pois<-replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)->cm
hist(cm)
d1<-Sys.Date()
classs(d1)
class(d1)
unclass(d1)
print d1
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<- sys.time()
t1<- Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")->t4
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance",xlab = "Speed")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2
)
mtcars
data(mtcars)
?boxplot
boxplot(mtcars, formula = mpg~cyl )
boxplot(data = mtcars, formula = mpg~cyl )
boxplot(mtcars, formula = mpg~cyl)
boxplot(formula = mpg~cyl, data = mtcars)
hist(mtcars$mpg)
library(datasets)
data("iris")
?iris
iris
mean(iris[iris$Species==virginica,iris$Sepal.Length])
iris[iris$Species==virginica,]
iris[iris$Species=='virginica',]
mean(iris[iris$Species=='virginica',iris$Sepal.Length])
mean(iris[iris$Species=='virginica',iris$Sepal.Length])
mean(iris[iris$Species=='virginica',])
mean(iris[iris$Species=='virginica',iris$Sepal.Length])
mean(iris[iris$Species=='virginica',]$Sepal.Length)
colMeans(iris)
iris
apply(iris[, 1:4], 2, mean)
?apply
library(datasets)
data("mtcars")
?mtcars
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
mtcars
with(mtcars, tapply(hp, cyl, mean))
s<-with(mtcars, tapply(hp,cyl,mean))
s
s[8]-s[4]
s[8]
s[[8]]
s["8"]
s["8"]-s["4"]
debug(ls)
ls
?ls
?ls
ls(mtcars)
ls()
ls()
ls
f<-gl(40,10)
f
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
y
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- z-1
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?:
?":"
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times =40)
rep(c(0,1,2))
rep(c(0,1,2),times=10)
rep(c(0,1,2),each =10)
num_vect <- vector(0.5,55,-10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "bobby")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
pastet(1:3, c("X","Y","Z"), sep = "")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4,sep = "-")
c(44,NA,5,NA)
x<- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
x[!is.na(x)] -> y
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x(c(-2,-10))
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20, 4,5)
matrix(1:20, nrow=4, ncol = 5)
matrix(data = 1:20, nrow=4, ncol = 5)
library(swirl)
swirl()
my_matrix2<-matrix(dat = 1:20, nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<- c("patient","age","weight","bp","rating","test")
colnames(cnames,my_data)
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
TRUE == TRUE
(FALSE ==TRUE) == TRUE
(FALSE ==TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
library(swirl)
swirl()
View(my_mean)
install.packages(xlsx)
install.packages("xlsxjars")
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(rJava)
library(xlsx)
library(xlsxjars)
library(xlsx)
install.packages("rJava",type='source')
install.packages("rJava", type = "source")
install.packages(ggplot2)
install.packages("ggplot2")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
siwrl
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks,100)
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwdd=2)
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution, region=="east")
head(east)
hist(east$pm25,col="grean")
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,,col="green")
with(pollution,plot(latitude~pm25))
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<-subset(pollution,region="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region,data=state,layout=c(4,1))
xyplot(Life.Exp~Income|region,data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy,data=mpg)
head(airquality)
rnage(airquality$Ozone)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozone in NYC")
may<-subset(airquality,month=="May")
may<-subset(airquality,month==5)
head(airquality)
may <- subset(airquality, Month==5)
points(may$Wind,may$Ozone,col="blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
may <- subset(airquality, Month!=5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="blue",pch=16)
points(notmay$Wind,notmay$Ozone,col="blue",pch=8)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",,pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,title="Ozone and Wind")
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
parpar(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
setwd("~/Dropbox/MOOC/Coursera/Reproducible Research/RepData_PeerAssessment1")
source('~/Dropbox/MOOC/Coursera/Reproducible Research/RepData_PeerAssessment1/PA1_Rcode.R')
g + geom_bar(stat="identity") +
labs(x = "Date", y = "Total Steps", title = "Total Steps per Day") +
theme_bw()
g <- ggplot(aes(x=steps),data=steps_per_day)
g+ geom_histogram()
g+ geom_histogram(bins=100)
g+ geom_histogram(bins=500)
g+ geom_histogram(bins=30)
g+ geom_histogram(bins=20)
g+ geom_histogram(bins=15)
g <- ggplot(aes(x=steps),data=steps_per_day)
g + geom_histogram(bins=20) +
labs(x = "Steps", y = "Count", title = "Total Steps per Day") +
theme_bw()
source('~/Dropbox/MOOC/Coursera/Reproducible Research/RepData_PeerAssessment1/PA1_Rcode.R')
g3 <- ggplot(aes(x=steps),data=imputed_steps_per_day)
g3 + geom_histogram(bins=20) +
labs(x = "Steps", y = "Count", title = "Total Steps per Day") +
theme_bw()
